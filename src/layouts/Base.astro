---
import '../styles/theme.css';
import '../styles/motion.css';

interface Props {
  title?: string;
  description?: string;
}

const {
  title = "Tulio Cunha",
  description = "Full Stack Developer - Building elegant solutions with code.",
} = Astro.props;

const fullTitle = title === "Tulio Cunha" ? title : `${title} • Tulio Cunha`;
---

<!doctype html>
<html lang="en" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{fullTitle}</title>
    <meta name="description" content={description} />
    <meta name="robots" content="index,follow" />
    
    <!-- Favicon placeholders -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    
    <!-- Preconnect to SF font CDN -->
    <link rel="preconnect" href="//fdn.fontcdn.ir" />
    <link rel="preconnect" href="//v1.fontapi.ir" />
    
    <!-- SF Pro Display (main UI font) -->
    <link href="https://v1.fontapi.ir/css/SFProDisplay" rel="stylesheet" />
    
    <!-- SF Mono (monospace for code) -->
    <link href="https://v1.fontapi.ir/css/SFMono" rel="stylesheet" />
    
    <!-- Open Graph -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    
    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={fullTitle} />
    <meta name="twitter:description" content={description} />
    
    <!-- Theme initialization script (runs before CSS to prevent FOUC) -->
    <script is:inline>
      (() => {
        const readStoredTheme = () => {
          try {
            const value = localStorage.getItem("theme");
            return value === "light" || value === "dark" ? value : null;
          } catch {
            return null;
          }
        };

        const stored = readStoredTheme();
        const root = document.documentElement;

        if (stored === "light" || stored === "dark") {
          root.setAttribute("data-theme", stored);
          if (stored === "light") {
            root.classList.remove("dark");
            root.classList.add("light");
          } else {
            root.classList.remove("light");
            root.classList.add("dark");
          }
        } else {
          // Check system preference
          const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
          const theme = prefersDark ? "dark" : "light";
          root.setAttribute("data-theme", theme);
          root.classList.add(theme);
        }
      })();
    </script>
  </head>
  
  <body>
    <a href="#main" class="sr-only">Skip to content</a>
    
    <!-- Minimal topbar with theme toggle -->
    <header class="topbar">
      <div class="topbar__inner">
        <div class="topbar__toggle">
          <button
            type="button"
            class="theme-toggle"
            aria-label="Toggle theme"
            data-theme-toggle
          >
            <span class="theme-toggle__track">
              <span class="theme-toggle__thumb"></span>
            </span>
          </button>
        </div>
      </div>
    </header>
    
    <main id="main" class="content">
      <slot />
    </main>
    
    <!-- Simple footer -->
    <footer class="footer">
      <div class="footer__inner">
        <p class="footer__copy">
          Bentolink™ by Tulio Cunha
        </p>
        <p class="footer__built">
          Built with Astro
        </p>
      </div>
    </footer>
    
    <!-- Theme controller and motion scripts -->
    <script>
      import '../scripts/theme.ts';
      import '../scripts/motion.ts';
    </script>
  </body>
</html>

<style>
  /* Topbar styles */
  .topbar {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 100;
    backdrop-filter: blur(var(--glass-blur-base)) saturate(var(--glass-saturation-base));
    background: rgba(22, 22, 24, 0.72);
    border-bottom: 1px solid var(--panel-border);
    transition: all var(--motion-duration-base) var(--motion-ease-out);
  }
  
  [data-theme="light"] .topbar {
    background: rgba(248, 248, 251, 0.72);
  }
  
  .topbar__inner {
    max-width: var(--container-xl);
    margin: 0 auto;
    padding: var(--topbar-padding) var(--container-padding-x);
    display: flex;
    justify-content: flex-end;
    align-items: center;
  }
  
  /* iOS-style Theme Toggle */
  .theme-toggle {
    position: relative;
    width: 51px;
    height: 31px;
    border: none;
    background: transparent;
    cursor: pointer;
    padding: 0;
    transition: all var(--motion-duration-base) var(--motion-ease-out);
  }

  .theme-toggle:active {
    transform: scale(0.96);
  }

  .theme-toggle__track {
    display: block;
    width: 51px;
    height: 31px;
    background: rgba(60, 60, 67, 0.36);
    border-radius: 31px;
    position: relative;
    transition: all var(--motion-duration-base) cubic-bezier(0.4, 0, 0.2, 1);
  }

  [data-theme="light"] .theme-toggle__track {
    background: #34C759;
  }

  .theme-toggle__thumb {
    position: absolute;
    top: 2px;
    left: 2px;
    width: 27px;
    height: 27px;
    background: #FFFFFF;
    border-radius: 50%;
    box-shadow:
      0 3px 8px rgba(0, 0, 0, 0.15),
      0 3px 1px rgba(0, 0, 0, 0.06);
    transition: all var(--motion-duration-base) cubic-bezier(0.4, 0, 0.2, 1);
  }

  [data-theme="light"] .theme-toggle__thumb {
    transform: translateX(20px);
  }

  .theme-toggle:hover .theme-toggle__track {
    opacity: 0.8;
  }
  
  /* Content */
  .content {
    padding-top: 80px;
    padding-bottom: var(--space-24);
    min-height: 100vh;
  }
  
  /* Footer */
  .footer {
    padding: var(--space-12) var(--container-padding-x);
    border-top: 1px solid var(--hairline);
  }

  .footer__inner {
    max-width: var(--container-xl);
    margin: 0 auto;
    text-align: center;
  }

  .footer__copy {
    font-size: var(--fs-footnote);
    color: var(--text-secondary);
    margin: 0 0 var(--space-1) 0;
  }

  .footer__built {
    font-size: var(--fs-caption-2);
    color: var(--text-tertiary);
    margin: 0;
    opacity: 0.7;
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .content {
      padding-top: 72px;
    }
    
    .topbar__inner {
      padding: var(--space-2) var(--space-4);
    }

    .footer {
      padding: var(--space-8) var(--space-4);
    }
  }
</style>
