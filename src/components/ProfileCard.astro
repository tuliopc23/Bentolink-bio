---
import IconTile from "./IconTile.astro";

interface Props {
	name: string;
	title: string;
	bio?: string;
	avatarSrc?: string;
	email?: string;
	location?: string;
}

const {
	name = "Tulio Cunha",
	title = "Full Stack Developer",
	bio,
	avatarSrc = "/avatar-placeholder.svg",
	email = "contact@tuliocunha.dev",
	location = "Brazil",
} = Astro.props;

const contacts = [
	{
		label: "Email",
		href: `mailto:${email}`,
		tint: "blue",
		iconAsset: "/icons/Email.webp",
	},
	{
		label: location,
		href: "#",
		tint: "green",
		iconAsset: "/icons/Location.svg",
	},
];
---

<section class="profile-card" data-reveal data-reveal-order="0">
  <div class="profile-card__photo">
    <img src={avatarSrc} alt={name} width="160" height="160" />
  </div>

  <div class="profile-card__content">
    <h1 class="profile-card__name">{name}</h1>
    <p class="profile-card__title">{title}</p>
    {bio && <p class="profile-card__bio">{bio}</p>}

    <div class="profile-card__contacts">
      {contacts.map((contact, index) => (
        <a
          href={contact.href}
          class="profile-card__contact"
          aria-label={contact.label}
          target={contact.href.startsWith('http') ? '_blank' : undefined}
          rel={contact.href.startsWith('http') ? 'noopener noreferrer' : undefined}
          data-reveal
          data-reveal-order={0.1 + (index * 0.1)}
        >
          <IconTile tint={contact.tint} label={contact.label} asset={contact.iconAsset} size="small" />
          <span class="profile-card__contact-label">{contact.label}</span>
        </a>
      ))}
    </div>
  </div>

  <div class="profile-card__socials-section">
    <slot />
  </div>
</section>

<style>
  .profile-card {
    display: grid;
    gap: var(--space-md);
    align-items: start;
    padding: clamp(24px, 3vw, 32px);
    background: var(--surface-elevated);
    border: 1px solid var(--panel-border);
    border-radius: 36px;
    box-shadow: var(--shadow-card);
    backdrop-filter: blur(var(--glass-blur-base)) saturate(var(--glass-saturation-base));
    grid-column: span 2;
    z-index: 1;
    transition: all var(--motion-duration-sm) var(--motion-ease-out);
  }

  .profile-card:hover {
    box-shadow: var(--shadow-card-hover);
    border-color: var(--panel-border-strong);
  }

  /* Three-column layout on desktop: photo | content | socials */
  @media (min-width: 768px) {
    .profile-card {
      grid-template-columns: auto 1fr auto;
      text-align: left;
    }
  }

  /* Centered layout on mobile */
  @media (max-width: 767px) {
    .profile-card {
      grid-template-columns: 1fr;
      text-align: center;
      justify-items: center;
    }
  }

  .profile-card__photo {
    position: relative;
    width: clamp(120px, 15vw, 160px);
    height: clamp(120px, 15vw, 160px);
    border-radius: 24px;
    overflow: hidden;
    border: 1px solid var(--panel-border);
    box-shadow: var(--shadow-card);
    transition: all var(--motion-duration-sm) var(--motion-ease-out);
  }

  .profile-card__photo:hover {
    transform: scale(var(--motion-scale-sm));
    box-shadow: var(--shadow-card-hover);
    border-color: var(--panel-border-strong);
  }

  .profile-card__photo img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }

  .profile-card__content {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .profile-card__name {
    font-size: var(--fs-profile-name);
    font-weight: 700;
    letter-spacing: var(--ls-profile-name);
    line-height: var(--lh-profile-name);
    margin: 0;
    color: var(--text);
  }

  .profile-card__title {
    font-size: var(--fs-profile-title);
    font-weight: 500;
    color: var(--muted);
    margin: 0;
    letter-spacing: var(--ls-profile-title);
  }

  .profile-card__bio {
    font-size: var(--fs-profile-bio);
    color: var(--muted);
    margin: 0;
    max-width: 54ch;
    line-height: var(--lh-base);
    margin-top: var(--space-xxs);
  }

  .profile-card__contacts {
    display: flex;
    gap: var(--space-sm);
    margin-top: var(--space-sm);
  }

  .profile-card__contact {
    display: flex;
    align-items: center;
    gap: var(--space-xxs);
    padding: var(--space-xxs) var(--space-xs);
    background: var(--surface-elevated);
    border: 1px solid var(--panel-border);
    border-radius: var(--radius-md);
    text-decoration: none;
    transition: all var(--motion-duration-sm) var(--motion-ease-out);
  }

  .profile-card__contact:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-card);
    border-color: var(--panel-border-strong);
  }

  .profile-card__contact-label {
    font-size: var(--fs--2);
    color: var(--muted);
    font-weight: 500;
  }

  .profile-card__socials-section {
    display: flex;
    flex-direction: column;
    min-width: 340px;
    max-width: 380px;
  }

  @media (min-width: 768px) {
    .profile-card__socials-section {
      margin-left: var(--space-md);
    }
  }

  /* Responsive breakpoints */
  @media (min-width: 1024px) {
    .profile-card__photo {
      width: 160px;
      height: 160px;
    }
  }

  @media (min-width: 768px) and (max-width: 1023px) {
    .profile-card__photo {
      width: 140px;
      height: 140px;
    }

    .profile-card {
      padding: 24px;
      gap: 20px;
    }
  }

  @media (max-width: 767px) {
    .profile-card__photo {
      width: 120px;
      height: 120px;
    }

    .profile-card {
      padding: 20px;
      gap: 16px;
    }

    .profile-card__contacts {
      justify-content: center;
      flex-wrap: wrap;
    }

    .profile-card__socials-section {
      width: 100%;
      min-width: 0;
    }
  }
</style>
