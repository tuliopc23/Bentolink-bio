---
import IconTile from "./IconTile.astro";

interface Props {
	href: string;
	title: string;
	body: string;
	tint: string;
	iconAsset?: string;
	revealOrder?: number;
}

const { href, title, body, tint = "blue", iconAsset, revealOrder } = Astro.props;
---

<a 
  class="card" 
  data-tint={tint}
  href={href}
  data-reveal
  data-reveal-order={revealOrder}
  target={href.startsWith('http') ? '_blank' : undefined}
  rel={href.startsWith('http') ? 'noopener noreferrer' : undefined}
>
  <div class="card__inner">
    <IconTile tint={tint} label={title} asset={iconAsset} size="medium" />
    <div class="card__content">
      <h3 class="card__title">{title}</h3>
      <p class="card__body">{body}</p>
    </div>
  </div>
</a>

<style>
  .card {
    --card-accent-base: rgba(255, 255, 255, 0.06);
    --card-accent-hover: rgba(255, 255, 255, 0.12);
    --card-focus-ring: rgba(255, 255, 255, 0.14);
    display: block;
    text-decoration: none;
    border-radius: var(--radius-card);
    position: relative;
    isolation: isolate;
    overflow: hidden;
    background: var(--surface-card);
    border: 1px solid var(--surface-card-border);
    box-shadow:
      inset 0 1px 0 rgba(255, 255, 255, 0.04),
      0 12px 24px rgba(0, 0, 0, 0.32);
    transition:
      transform var(--motion-duration-fast) var(--motion-ease-out),
      box-shadow var(--motion-duration-fast) var(--motion-ease-out),
      background-color var(--motion-duration-fast) var(--motion-ease-out),
      border-color var(--motion-duration-fast) var(--motion-ease-out);
  }

  .card::before {
    content: "";
    position: absolute;
    inset: 1px;
    border-radius: inherit;
    background:
      radial-gradient(circle at 50% 0%, var(--card-accent-base) 0%, rgba(0, 0, 0, 0) 72%);
    opacity: 0.18;
    pointer-events: none;
    transition: opacity var(--motion-duration-sm) var(--motion-ease-out);
  }

  .card::after {
    content: "";
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    pointer-events: none;
    opacity: 0;
    box-shadow: 0 0 0 0 var(--card-focus-ring);
    transition:
      opacity var(--motion-duration-sm) var(--motion-ease-out),
      box-shadow var(--motion-duration-sm) var(--motion-ease-out);
  }
  
  .card:hover {
    transform: translateY(-2px);
    background: var(--surface-card-hover);
    border-color: var(--surface-card-border-strong);
    box-shadow:
      inset 0 1px 0 rgba(255, 255, 255, 0.05),
      0 16px 32px rgba(0, 0, 0, 0.4);
  }

  .card:hover::before {
    background:
      radial-gradient(circle at 50% 0%, var(--card-accent-hover) 0%, rgba(0, 0, 0, 0) 72%);
    opacity: 0.3;
  }
  
  .card:active {
    transform: translateY(0) scale(var(--motion-scale-active));
    background: var(--surface-card-active);
  }

  .card:focus-visible {
    outline: none;
  }

  .card:focus-visible::after {
    opacity: 1;
    box-shadow:
      0 0 0 1px rgba(255, 255, 255, 0.14),
      0 0 0 6px var(--card-focus-ring);
  }
  
  .card__inner {
    display: flex;
    align-items: center;
    gap: var(--gap-lg);
    padding: var(--card-padding-compact);
  }

  .card__content {
    flex: 1;
    min-width: 0;
  }

  .card__title {
    font-size: var(--fs-body);
    font-weight: var(--fw-semibold);
    letter-spacing: var(--ls-body);
    line-height: var(--lh-tight);
    margin: 0 0 var(--space-1) 0;
    color: var(--text-primary);
  }

  .card__body {
    font-size: var(--fs-callout);
    line-height: var(--lh-snug);
    color: var(--text-secondary);
    margin: 0;
  }
  
  .card[data-tint="blue"] {
    --card-accent-hover: rgba(10, 132, 255, 0.26);
    --card-focus-ring: rgba(10, 132, 255, 0.22);
  }

  .card[data-tint="indigo"] {
    --card-accent-hover: rgba(94, 92, 232, 0.26);
    --card-focus-ring: rgba(94, 92, 232, 0.22);
  }

  .card[data-tint="teal"] {
    --card-accent-hover: rgba(95, 212, 255, 0.26);
    --card-focus-ring: rgba(95, 212, 255, 0.24);
  }

  .card[data-tint="green"] {
    --card-accent-hover: rgba(48, 217, 72, 0.26);
    --card-focus-ring: rgba(48, 217, 72, 0.22);
  }

  .card[data-tint="orange"] {
    --card-accent-hover: rgba(255, 160, 13, 0.26);
    --card-focus-ring: rgba(255, 160, 13, 0.22);
  }

  .card[data-tint="pink"] {
    --card-accent-hover: rgba(255, 56, 97, 0.26);
    --card-focus-ring: rgba(255, 56, 97, 0.22);
  }

  .card[data-tint="purple"] {
    --card-accent-hover: rgba(194, 91, 244, 0.26);
    --card-focus-ring: rgba(194, 91, 244, 0.22);
  }

  .card[data-tint="red"] {
    --card-accent-hover: rgba(255, 71, 60, 0.26);
    --card-focus-ring: rgba(255, 71, 60, 0.22);
  }

  .card[data-tint="yellow"] {
    --card-accent-hover: rgba(255, 215, 13, 0.26);
    --card-focus-ring: rgba(255, 215, 13, 0.22);
  }

  .card[data-tint="cyan"] {
    --card-accent-hover: rgba(90, 200, 250, 0.26);
    --card-focus-ring: rgba(90, 200, 250, 0.22);
  }
  
  /* Light mode adjustments */
  [data-theme="light"] .card {
    background: var(--surface-card);
    border-color: var(--surface-card-border);
    box-shadow:
      inset 0 1px 0 rgba(255, 255, 255, 0.6),
      0 8px 18px rgba(34, 48, 88, 0.14);
  }
  
  [data-theme="light"] .card:hover {
    background: var(--surface-card-hover);
    border-color: var(--surface-card-border-strong);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .card__inner {
      padding: var(--space-4);
      gap: var(--gap-md);
    }

    .card__title {
      font-size: var(--fs-callout);
    }

    .card__body {
      font-size: var(--fs-footnote);
    }
  }
</style>
